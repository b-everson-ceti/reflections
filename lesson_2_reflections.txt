-What happens when you initialize a repository? Why do you need to do it?

You create the hidden folder needed by git to store different versions. The files and 
folders used by git aren't in place so there is no start for the project.

-How is the staging area different from the working directory and the repository? 
What value do you think it offers?

The working directory is the location on disk, so the staging area is in memory and 
it also hasn't been commited to the repository. It allows you to ensure that you have 
the right files "staged" before you commit them. 

-How can you use the staging area to make sure you have one commit per logical change?

You can check to see that you have only the correct files added to the staging area. 
If it is not correct you can reset it to start over.

-What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches can keep different versions separate so that you can either experiment with features, or have versions that 
have different features, such as different languages. 

-How do the diagrams help you visualize the branch structure?

They show each branch as its own line, and shows commits in a linear fashion. The use of history shows which commits were made 
on each branch in order. If reachability isn't covered more in depth I will probably have to come up with some exercises for myself.

-What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The commits from the branch being merged get added to the history for the branch that it is being merged into. A commit 
that merges the two branches holds information about both of its parent commits, which should be where the history comes from.
When you delete a branch, you are not deleting commits, you are deleting a label that is used to reach them.

-What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros: It's faster to merge automatically, leading to much less work. 

Cons: Automatic merging will take out lines remove from both commits, even if they are coincidentally deleted.